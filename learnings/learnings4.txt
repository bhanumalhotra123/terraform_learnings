How terraform plan is used in production?

terraform plan --out=app.tfplan



PS C:\Users\HP\Desktop\terraform_learnings\learnings> terraform plan --out=app.tfplan 

Terraform used the selected providers to generate the following       
execution plan. Resource actions are indicated with the following     
symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.nginx will be created
  + resource "aws_instance" "nginx" {
      + ami                                  = "ami-0c55b159cbfafe1f0"
      + arn                                  = (known after apply)    
      + associate_public_ip_address          = (known after apply)    
      + availability_zone                    = (known after apply)    
      + cpu_core_count                       = (known after apply)    
      + cpu_threads_per_core                 = (known after apply)    
      + disable_api_stop                     = (known after apply)    
      + disable_api_termination              = (known after apply)    
      + ebs_optimized                        = (known after apply)    
      + get_password_data                    = false
      + host_id                              = (known after apply)    
      + host_resource_group_arn              = (known after apply)    
      + iam_instance_profile                 = (known after apply)    
      + id                                   = (known after apply)    
      + instance_initiated_shutdown_behavior = (known after apply)    
      + instance_lifecycle                   = (known after apply)    
      + instance_state                       = (known after apply)    
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)    
      + ipv6_addresses                       = (known after apply)    
      + key_name                             = (known after apply)    
      + monitoring                           = (known after apply)    
      + outpost_arn                          = (known after apply)    
      + password_data                        = (known after apply)    
      + placement_group                      = (known after apply)    
      + placement_partition_number           = (known after apply)    
      + primary_network_interface_id         = (known after apply)    
      + private_dns                          = (known after apply)    
      + private_ip                           = (known after apply)    
      + public_dns                           = (known after apply)    
      + public_ip                            = (known after apply)    
      + secondary_private_ips                = (known after apply)    
      + security_groups                      = (known after apply)    
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)    
      + subnet_id                            = (known after apply)    
      + tags_all                             = (known after apply)    
      + tenancy                              = (known after apply)    
      + user_data                            = (known after apply)    
      + user_data_base64                     = (known after apply)    
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)    
    }

Plan: 1 to add, 0 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────── 

Saved the plan to: app.tfplan (a binary file)

To perform exactly these actions, run the following command to apply: 
    terraform apply "app.tfplan"




Now you can pass this file to terraform apply.

But why are we saving the output in a file?

because this is a binary file.

What if someone tries to make a change between the time you do terraform plan and terraform apply?